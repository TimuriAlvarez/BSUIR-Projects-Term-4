#pragma once

#include <string.h>

#include "tbasic.h"

#define CONTAINER_TYPE TString
#define CONTAINER_DATA_TYPE char
#define CONST_CONTAINER_TYPE TMessage

typedef CONTAINER_DATA_TYPE* T_CONTAINER(CONTAINER_TYPE, CONTAINER_DATA_TYPE, T_ITERATOR_POSTFIX);

/*	Static Const part of CONTAINER_TYPE (aka CONST_CONTAINER_TYPE)	*/
size_t T_CLASS(CONTAINER_TYPE, size)(CONST_CONTAINER_TYPE message);
TComparison T_CLASS(CONTAINER_TYPE, compare)(CONST_CONTAINER_TYPE message1, CONST_CONTAINER_TYPE message2);
TBool T_CLASS(CONTAINER_TYPE, equal)(CONST_CONTAINER_TYPE message1, CONST_CONTAINER_TYPE message2);
TBool T_CLASS(CONTAINER_TYPE, empty)(CONST_CONTAINER_TYPE message);
TBool T_CLASS(CONTAINER_TYPE, contains)(CONST_CONTAINER_TYPE message, const CONTAINER_DATA_TYPE CONTAINER_DATA_TYPEacter);

/*	Dynamic Mutable part of CONTAINER_TYPE (CONTAINER_TYPE itself)	*/
CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, constructor)(CONST_CONTAINER_TYPE format, ... );
CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, default_constructor)(void);
CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, clear)(CONTAINER_TYPE const string);
CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, destructor)(CONTAINER_TYPE const string);
CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, resize)(CONTAINER_TYPE const string);
CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, append)(CONTAINER_TYPE const string, const CONTAINER_DATA_TYPE CONTAINER_DATA_TYPEacter);
//CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, multy_append)(CONTAINER_TYPE const string, CONST_CONTAINER_TYPE message);
//CONTAINER_TYPE* T_CLASS(CONTAINER_TYPE, chop)(CONST_CONTAINER_TYPE string, const size_t quentity) { !chop it! }
CONTAINER_TYPE T_CLASS(CONTAINER_TYPE, substring)(CONST_CONTAINER_TYPE message, const size_t index_start, const size_t index_end);
CONTAINER_TYPE* T_CLASS(CONTAINER_TYPE, split)(CONTAINER_TYPE message, CONST_CONTAINER_TYPE splitters);

void T_CLASS(CONTAINER_TYPE, parser)(CONTAINER_TYPE string, CONST_CONTAINER_TYPE format, ... );

#ifndef T_SOURCE_FILE
#undef CONTAINER_TYPE
#undef CONTAINER_DATA_TYPE
#undef CONST_CONTAINER_TYPE
#endif
